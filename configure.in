AC_INIT([Dismount], [1.000])
AC_CONFIG_SRCDIR([])
AC_CONFIG_AUX_DIR(config)
AM_CONFIG_HEADER(config.h)
AC_LANG_C
AM_INIT_AUTOMAKE
AM_MAINTAINER_MODE
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LIBTOOL
AC_HEADER_STDC

AC_CHECK_HEADERS([sys/types.h sys/stat.h stdio.h stdlib.h string.h stdlib.h errno.h])
AC_CHECK_LIB([pthread], [pthread_mutex_init], [], [
            echo "pthread library is missing. pthread is required for this program"
            exit -1])

AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE

AC_ARG_ENABLE(debug,
[  --enable-debug      Compile with debugging flags],
[case "${enableval}" in
    yes) debug=true ;;
    no)  debug=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],[debug=false])
AM_CONDITIONAL(DEBUG, test x$debug = xtrue)


AC_ARG_ENABLE(unicode,
[  --enable-unicode    Compile with UNICODE support],
[case "${enableval}" in
    yes) unicode=true ;;
    :no)  unicode=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-unicode) ;;
esac],[unicode=false])
AM_CONDITIONAL(UNICODE, test x$unicode = xtrue)

AC_ARG_ENABLE(tests,
[  --enable-tests      Compile dismount tests],
[case "${enableval}" in
    yes) tests=true ;;
    :no)  tests=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-tests) ;;
esac],[tests=false])
AM_CONDITIONAL(TESTS, test x$tests = xtrue)


AC_ARG_WITH(xstl,
[  --with-xstl=<dir>   Select xStl path ],
AC_MSG_NOTICE(Using xStl path from:$with_xstl), with_xstl="none")

XSTL_PATH=
if test "x$with_xstl" != xnone; then
  XSTL_PATH=$with_xstl
fi
AC_SUBST(XSTL_PATH)


AC_ARG_WITH(pelib,
[  --with-pelib=<dir>   Select lib PE path ],
AC_MSG_NOTICE(Using lib PE path from:$with_pelib), with_pelib="none")

PELIB_PATH=
if test "x$with_pelib" != xnone; then
  PELIB_PATH=$with_pelib
fi
AC_SUBST(PELIB_PATH)
AM_CONDITIONAL(PELIB, test "x$with_pelib" != xnone)

CFLAGS_DISMOUNT_COMMON="-Wall -fPIC -DLINUX -Wno-write-strings"
AC_SUBST(CFLAGS_DISMOUNT_COMMON)


AC_OUTPUT([Makefile
           tests/Makefile
        ])

